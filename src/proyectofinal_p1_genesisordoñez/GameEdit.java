/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package proyectofinal_p1_genesisordoñez;

import java.util.Random;
import javax.swing.JOptionPane;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import java.net.URL;
import javax.sound.sampled.FloatControl;

/**
 *
 * @author genfe
 */
public class GameEdit extends javax.swing.JFrame {

    private Pokemon gamer;//declaramos atributos en el jFrame que llaman a los campos de la clase Pokemon
    private Pokemon rival;
    private Clip music;
    
    public GameEdit() {
        //para hacerlo mas justo, les cambie el nivel de vida, pues en el caso de que uno tuviera menos vida que otro al iniciar, uno de ellos siempre ganaria
        initComponents();
        gamer= new Pokemon("PapuPro777",300.0,30.0,10,40);//se instancian los objetos y se mandan al constructor
        rival=new Pokemon("Robleis34",300.0,25.0,12,35);
        updateLabels();
        startMusic();
    }
    private void updateLabels(){
        lblLifePok1.setText("PapuPro777: "+String.format("%.2f/300 HP",gamer.getPokLife()));//actualiza cuanta vida tiene el jugador despues de cada ataque, usando un printf (pero de string)
        lblLifePok2.setText("Robleis34: "+String.format("%.2f/300 HP",rival.getPokLife()));
        
    }
    private void startMusic(){//ese metodo es para añadir musica, lo investigue.
        try{
          URL url=getClass().getResource("/proyectofinal_p1_genesisordoñez/Pokémon Theme (Gotta Catch 'Em All) Instrumental.wav");  
          AudioInputStream s=AudioSystem.getAudioInputStream(url);
          music=AudioSystem.getClip();
          music.open(s);
          FloatControl gainControl=(FloatControl)music.getControl(FloatControl.Type.MASTER_GAIN);
          gainControl.setValue(-25.0f);
          music.loop(Clip.LOOP_CONTINUOUSLY);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
     private void stopMusic() {
        if (music != null && music.isRunning()) {
            music.stop();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label2 = new java.awt.Label();
        AttackButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblLifePok2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblLifePok1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("POKEMON BATTLE");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusable(false);
        setForeground(new java.awt.Color(255, 80, 91));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        label2.setVisible(false);
        getContentPane().add(label2, new org.netbeans.lib.awtextra.AbsoluteConstraints(780, 207, 0, 0));

        AttackButton.setBackground(new java.awt.Color(255, 255, 204));
        AttackButton.setFont(new java.awt.Font("Arial Narrow", 0, 14)); // NOI18N
        AttackButton.setForeground(new java.awt.Color(0, 0, 0));
        AttackButton.setText("PapuPro777 Beam");
        AttackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AttackButtonActionPerformed(evt);
            }
        });
        getContentPane().add(AttackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 540, 140, 50));

        jLabel2.setBackground(new java.awt.Color(0, 0, 0));
        jLabel2.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Level 50");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 70, 30));

        lblLifePok2.setBackground(new java.awt.Color(51, 102, 255));
        lblLifePok2.setFont(new java.awt.Font("Arial Narrow", 3, 14)); // NOI18N
        lblLifePok2.setForeground(new java.awt.Color(0, 0, 0));
        lblLifePok2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectofinal_p1_genesisordoñez/57ffd264f64ff502c5cc3bf8c7177bdc-removebg-preview.png"))); // NOI18N
        lblLifePok2.setOpaque(true);
        getContentPane().add(lblLifePok2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 430, 200));

        jLabel3.setFont(new java.awt.Font("Arial Narrow", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Level 50");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(890, 500, 60, 30));

        lblLifePok1.setBackground(new java.awt.Color(255, 255, 204));
        lblLifePok1.setFont(new java.awt.Font("Arial Narrow", 3, 14)); // NOI18N
        lblLifePok1.setForeground(new java.awt.Color(0, 0, 0));
        lblLifePok1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectofinal_p1_genesisordoñez/e1ff5427ae685c0943fb289f76e0ed17-removebg-preview.png"))); // NOI18N
        lblLifePok1.setToolTipText("");
        lblLifePok1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        lblLifePok1.setName("lblLifePok1"); // NOI18N
        lblLifePok1.setOpaque(true);
        getContentPane().add(lblLifePok1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 460, 410, 180));
        lblLifePok1.getAccessibleContext().setAccessibleName("lblLifePok1");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectofinal_p1_genesisordoñez/57ffd264f64ff502c5cc3bf8c7177bdc-removebg-preview.png"))); // NOI18N
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 190, 200, 200));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectofinal_p1_genesisordoñez/e1ff5427ae685c0943fb289f76e0ed17-removebg-preview.png"))); // NOI18N
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 310, 240, 240));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectofinal_p1_genesisordoñez/6bea12ee9c7b069e8bdcf74726fdd299.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 680));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AttackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AttackButtonActionPerformed
        JOptionPane.showMessageDialog(this,"Juega "+gamer.getPokName()+"!","Turno del jugador",JOptionPane.INFORMATION_MESSAGE);
        //lo de critico
        Random queso = new Random();
        int numR=1+queso.nextInt(100);
        int modify;
        if(numR%2==0){
            modify=2;
            JOptionPane.showMessageDialog(this,"ATAQUE CRITICO!","CRITICO!",JOptionPane.WARNING_MESSAGE);
        }
        else{
            modify=1;
        }
        
        //Calculo de danos
        double dan=((2*gamer.getPokLevel()+10)/250.0)*(gamer.getPokAttack()/(double)rival.getPokDefender())*(40+2);
        dan*=modify;
        JOptionPane.showMessageDialog(this,"Ha hecho un "+dan+" of damage a su enemigo","BONUS!",JOptionPane.PLAIN_MESSAGE);
        rival.setPokLife(rival.getPokLife()-dan);
        
         //El turno del rival
        JOptionPane.showMessageDialog(this,"Turno de "+rival.getPokName(),"Rival Turno", JOptionPane.INFORMATION_MESSAGE);
        int num2=1+queso.nextInt(100);
        if(num2%2==0){
            modify=2;
            JOptionPane.showMessageDialog(this,"CRITICO DEL RIVAL!","CRITICO!",JOptionPane.WARNING_MESSAGE);
        }
        else{
            modify=1;
        }
        double danR=((2*rival.getPokLevel()+10)/250.0)*(rival.getPokAttack()/(double)gamer.getPokDefender())*(40+2);
        danR*=modify;
        JOptionPane.showMessageDialog(this,"Te han hecho "+danR+" of damage :(","PIPIPI!",JOptionPane.PLAIN_MESSAGE);
        gamer.setPokLife(gamer.getPokLife()-danR);
        
        //update de labels y comprobar quien gana
        updateLabels();
        if(rival.getPokLife()<=0){
            stopMusic();  
            JOptionPane.showMessageDialog(this,rival.getPokName()+" ha sido debilitado\nHAS GANADO!","VICTORIA",JOptionPane.INFORMATION_MESSAGE);
            AttackButton.setEnabled(false);//esto para que cuando termine la partida, ya no se pueda usar el boton 
            return;
        }
        else if(gamer.getPokLife()<=0){
            stopMusic();  
            JOptionPane.showMessageDialog(this,"Has sido debilitado\nGAME OVER!","DERROTA",JOptionPane.INFORMATION_MESSAGE);
            AttackButton.setEnabled(false);
            return;
        }
        
       

        
    }//GEN-LAST:event_AttackButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameEdit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AttackButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private java.awt.Label label2;
    private javax.swing.JLabel lblLifePok1;
    private javax.swing.JLabel lblLifePok2;
    // End of variables declaration//GEN-END:variables
}
